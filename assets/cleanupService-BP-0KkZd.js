import{u as l,l as s}from"./index-BjROJruB.js";class u{isCleaningUp=!1;cleanupTimer=null;startAutoCleanup(){console.log("🧹 [CleanupService] Démarrage du nettoyage automatique"),this.cleanupTimer=setInterval(()=>{this.checkAndCleanup()},1800*1e3),setTimeout(()=>{this.cleanupOldData()},5e3)}stopAutoCleanup(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=null,console.log("🛑 [CleanupService] Nettoyage automatique arrêté"))}async checkAndCleanup(){const e=l.getState();e.route.driverRoute,this.shouldCleanup(e)&&(console.log("🧹 [CleanupService] Conditions de nettoyage remplies - déclenchement"),await this.performFullCleanup())}shouldCleanup(e){const o=e.route.driverRoute,t=e.sync.pendingActions,r=e.sync.failedActions;return!o||!e.route.isActive?(console.log("🧹 [CleanupService] Pas de tournée active - nettoyage autorisé"),!0):o.status==="completed"&&t.length===0&&r.length===0?(console.log("🧹 [CleanupService] Tournée complétée et synchronisée - nettoyage autorisé"),!0):(o?Date.now()-new Date(o.created_at).getTime():0)>1440*60*1e3?(console.log("🧹 [CleanupService] Route très ancienne (>24h) - nettoyage autorisé"),!0):!1}async performFullCleanup(){if(this.isCleaningUp)return console.log("⏳ [CleanupService] Nettoyage déjà en cours"),{success:!1,itemsRemoved:0,errors:["Nettoyage en cours"],details:{photos:0,cache:0,oldRoutes:0,localStorage:0}};this.isCleaningUp=!0;const e=[],o={photos:0,cache:0,oldRoutes:0,localStorage:0};try{console.log("🧹 [CleanupService] Début du nettoyage complet"),o.photos=await this.cleanupOldPhotos(),o.cache=await this.cleanupLocalForageCache(),o.oldRoutes=await this.cleanupOldRouteData(),o.localStorage=await this.cleanupLocalStorage();const t=o.photos+o.cache+o.oldRoutes+o.localStorage;return console.log("✅ [CleanupService] Nettoyage terminé:",{totalRemoved:t,details:o}),{success:!0,itemsRemoved:t,errors:e,details:o}}catch(t){return console.error("❌ [CleanupService] Erreur lors du nettoyage:",t),e.push(t instanceof Error?t.message:"Erreur inconnue"),{success:!1,itemsRemoved:0,errors:e,details:o}}finally{this.isCleaningUp=!1}}async cleanupOldPhotos(){try{console.log("📸 [CleanupService] Nettoyage des photos anciennes...");const e=l.getState(),o=e.assets.photos,t=Date.now()-10080*60*1e3;let r=0;const a=[];o.forEach((n,c)=>{n.timestamp<t&&n.uploaded&&a.push(c)});for(const n of a)try{await s.removeItem(`photo_${n}`),r++}catch(c){console.warn(`⚠️ Erreur suppression photo ${n}:`,c)}return a.length>0&&e.removeOldPhotos(a),console.log(`📸 [CleanupService] ${r} photos anciennes supprimées`),r}catch(e){return console.error("❌ Erreur nettoyage photos:",e),0}}async cleanupLocalForageCache(){try{console.log("💾 [CleanupService] Nettoyage du cache LocalForage...");const e=await s.keys(),o=Date.now()-4320*60*1e3;let t=0;for(const r of e)try{if(this.shouldKeepCacheItem(r))continue;const a=await s.getItem(r);a&&typeof a=="object"&&"timestamp"in a&&a.timestamp<o&&(await s.removeItem(r),t++)}catch(a){console.warn(`⚠️ Erreur traitement clé ${r}:`,a)}return console.log(`💾 [CleanupService] ${t} éléments de cache supprimés`),t}catch(e){return console.error("❌ Erreur nettoyage cache:",e),0}}shouldKeepCacheItem(e){return["auth","session","user","main-app-storage","current_route","active_"].some(t=>e.includes(t))}async cleanupOldRouteData(){try{console.log("🚛 [CleanupService] Nettoyage des données de routes anciennes...");const e=l.getState();let o=0;return!e.route.isActive&&!e.route.driverRoute&&(e.clearRoute(),o++,console.log("🚛 [CleanupService] Store de route nettoyé")),o}catch(e){return console.error("❌ Erreur nettoyage routes:",e),0}}async cleanupLocalStorage(){try{console.log("🗂️ [CleanupService] Nettoyage du localStorage...");let e=0;const o=[];for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r&&this.shouldRemoveLocalStorageItem(r)&&o.push(r)}return o.forEach(t=>{try{localStorage.removeItem(t),e++}catch(r){console.warn(`⚠️ Erreur suppression localStorage ${t}:`,r)}}),console.log(`🗂️ [CleanupService] ${e} éléments localStorage supprimés`),e}catch(e){return console.error("❌ Erreur nettoyage localStorage:",e),0}}shouldRemoveLocalStorageItem(e){return["supabase.auth","auth-storage","main-app-storage","app_version_info"].some(r=>e.includes(r))?!1:["temp_","cache_","old_","debug_","test_"].some(r=>e.includes(r))}async cleanupOldData(){console.log("🧹 [CleanupService] Nettoyage des données anciennes au démarrage...");try{await this.cleanupOldPhotos(),await this.cleanupLocalStorage(),console.log("✅ [CleanupService] Nettoyage de démarrage terminé")}catch(e){console.error("❌ [CleanupService] Erreur nettoyage démarrage:",e)}}async forceCleanup(){return console.log("🚨 [CleanupService] Nettoyage forcé déclenché"),await this.performFullCleanup()}}const g=new u;export{g as cleanupService};
